{"ast":null,"code":"var _jsxFileName = \"/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/Dashboard.js\";\nimport { state, useState } from \"react\";\nimport ProjectList from \"./ProjectList\";\nimport NavBar from \"./NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dashboard(_ref) {\n  let {\n    user,\n    onLogin\n  } = _ref;\n  // const [username, setUsername] = useState(user.username);\n  // const [email, setEmail] = useState(user.email);\n  // const [password, setPassword] = useState(\"\");\n  // const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  // const [imageUrl, setImageUrl] = useState(\"\");\n  // const [bio, setBio] = useState(\"\");\n  // const [errors, setErrors] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n\n  // function handleEdit(e) {\n  //     e.preventDefault();\n  //     setErrors([]);\n  //     setIsLoading(true);\n  //     fetch(\"/signup\", {\n  //       method: \"POST\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify({\n  //         username: username,\n  //         email: email,\n  //         password: password,\n  //         password_confirmation: passwordConfirmation,\n  //         img_url: imageUrl,\n  //         bio: bio,\n  //       }),\n  //     }).then((r) => {\n  //       setIsLoading(false);\n  //       if (r.ok) {\n  //         r.json().then((user) => onLogin(user));\n  //       } else {\n  //         r.json().then((err) => setErrors(err.errors));\n  //       }\n  //     });\n  //     setUsername(\"\");\n  //     setEmail(\"\");\n  //     setPassword(\"\");\n  //     setPasswordConfirmation(\"\");\n  //     setImageUrl(\"\");\n  //     setBio(\"\");\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Dashboard lives here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProjectList, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Your Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleEdit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        autoComplete: \"off\",\n        value: username,\n        placeholder: \"Username\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        autoComplete: \"off\",\n        value: email,\n        placeholder: \"E-mail Address\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"imageUrl\",\n        value: imageUrl,\n        placeholder: \"Profile Image URL\",\n        onChange: e => setImageUrl(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        rows: \"3\",\n        id: \"bio\",\n        value: bio,\n        placeholder: \"Enter your Bio\",\n        onChange: e => setBio(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        placeholder: \"Password\",\n        onChange: e => setPassword(e.target.value),\n        autoComplete: \"current-password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password_confirmation\",\n        value: passwordConfirmation,\n        placeholder: \"Confirm Password\",\n        onChange: e => setPasswordConfirmation(e.target.value),\n        autoComplete: \"current-password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isLoading ? \"Loading...\" : \"Confirm Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), errors.map(err => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: err\n      }, err, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["state","useState","ProjectList","NavBar","Dashboard","user","onLogin","handleEdit","username","e","setUsername","target","value","email","setEmail","imageUrl","setImageUrl","bio","setBio","password","setPassword","passwordConfirmation","setPasswordConfirmation","isLoading","errors","map","err"],"sources":["/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/Dashboard.js"],"sourcesContent":["import { state, useState }  from \"react\";\nimport ProjectList from \"./ProjectList\";\nimport NavBar from \"./NavBar\";\n\nexport default function Dashboard ({ user, onLogin }) {\n    // const [username, setUsername] = useState(user.username);\n    // const [email, setEmail] = useState(user.email);\n    // const [password, setPassword] = useState(\"\");\n    // const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n    // const [imageUrl, setImageUrl] = useState(\"\");\n    // const [bio, setBio] = useState(\"\");\n    // const [errors, setErrors] = useState([]);\n    // const [isLoading, setIsLoading] = useState(false);\n\n\n    // function handleEdit(e) {\n    //     e.preventDefault();\n    //     setErrors([]);\n    //     setIsLoading(true);\n    //     fetch(\"/signup\", {\n    //       method: \"POST\",\n    //       headers: {\n    //         \"Content-Type\": \"application/json\",\n    //       },\n    //       body: JSON.stringify({\n    //         username: username,\n    //         email: email,\n    //         password: password,\n    //         password_confirmation: passwordConfirmation,\n    //         img_url: imageUrl,\n    //         bio: bio,\n    //       }),\n    //     }).then((r) => {\n    //       setIsLoading(false);\n    //       if (r.ok) {\n    //         r.json().then((user) => onLogin(user));\n    //       } else {\n    //         r.json().then((err) => setErrors(err.errors));\n    //       }\n    //     });\n    //     setUsername(\"\");\n    //     setEmail(\"\");\n    //     setPassword(\"\");\n    //     setPasswordConfirmation(\"\");\n    //     setImageUrl(\"\");\n    //     setBio(\"\");\n    //   }\n    \n\n    return (\n        <>\n            <p>Dashboard lives here</p>\n            {/* <NavBar user={user} onLogin={onLogin} /> */}\n            <ProjectList user={user} />\n            <h1>Edit Your Profile</h1>\n        <form onSubmit={handleEdit}>\n          <input\n            type=\"text\"\n            id=\"username\"\n            autoComplete=\"off\"\n            value={username}\n            placeholder=\"Username\"\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <br />\n          <input\n            type=\"text\"\n            id=\"email\"\n            autoComplete=\"off\"\n            value={email}\n            placeholder=\"E-mail Address\"\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <br />\n          <input\n            type=\"text\"\n            id=\"imageUrl\"\n            value={imageUrl}\n            placeholder=\"Profile Image URL\"\n            onChange={(e) => setImageUrl(e.target.value)}\n          />\n          <br />\n          <input\n            rows=\"3\"\n            id=\"bio\"\n            value={bio}\n            placeholder=\"Enter your Bio\"\n            onChange={(e) => setBio(e.target.value)}\n          />\n          <br />\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            placeholder=\"Password\"\n            onChange={(e) => setPassword(e.target.value)}\n            autoComplete=\"current-password\"\n          />\n          <br />\n          <input\n            type=\"password\"\n            id=\"password_confirmation\"\n            value={passwordConfirmation}\n            placeholder=\"Confirm Password\"\n            onChange={(e) => setPasswordConfirmation(e.target.value)}\n            autoComplete=\"current-password\"\n          />\n          <br />\n          <br />\n          <button type=\"submit\">{isLoading ? \"Loading...\" : \"Confirm Changes\"}</button>\n          {errors.map((err) => (\n            <p key={err}>{err}</p>\n          ))}\n        </form>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}