{"ast":null,"code":"var _jsxFileName = \"/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport { state, useState } from \"react\";\nimport ProjectList from \"./ProjectList\";\nimport NavBar from \"./NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dashboard(_ref) {\n  _s();\n  let {\n    user,\n    onLogin\n  } = _ref;\n  const [username, setUsername] = useState(user.username);\n  const [email, setEmail] = useState(user.email);\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  function handleEdit(e) {\n    e.preventDefault();\n    setErrors([]);\n    setIsLoading(true);\n    fetch(\"/signup\", {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: username,\n        email: email,\n        password: password,\n        password_confirmation: passwordConfirmation,\n        img_url: imageUrl,\n        bio: bio\n      })\n    }).then(r => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then(user => onLogin(user));\n      } else {\n        r.json().then(err => setErrors(err.errors));\n      }\n    });\n    setUsername(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n    setPasswordConfirmation(\"\");\n    setImageUrl(\"\");\n    setBio(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Dashboard lives here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProjectList, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Your Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleEdit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        autoComplete: \"off\",\n        value: username,\n        placeholder: \"Username\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        autoComplete: \"off\",\n        value: email,\n        placeholder: \"E-mail Address\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"imageUrl\",\n        value: imageUrl,\n        placeholder: \"Profile Image URL\",\n        onChange: e => setImageUrl(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        rows: \"3\",\n        id: \"bio\",\n        value: bio,\n        placeholder: \"Enter your Bio\",\n        onChange: e => setBio(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        placeholder: \"Password\",\n        onChange: e => setPassword(e.target.value),\n        autoComplete: \"current-password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password_confirmation\",\n        value: passwordConfirmation,\n        placeholder: \"Confirm Password\",\n        onChange: e => setPasswordConfirmation(e.target.value),\n        autoComplete: \"current-password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isLoading ? \"Loading...\" : \"Confirm Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), errors.map(err => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: err\n      }, err, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Dashboard, \"Gz3Pn8Ww4YWulJFvXa/fgQRgQoc=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["state","useState","ProjectList","NavBar","Dashboard","user","onLogin","username","setUsername","email","setEmail","password","setPassword","passwordConfirmation","setPasswordConfirmation","imageUrl","setImageUrl","bio","setBio","errors","setErrors","isLoading","setIsLoading","handleEdit","e","preventDefault","fetch","method","headers","body","JSON","stringify","password_confirmation","img_url","then","r","ok","json","err","target","value","map"],"sources":["/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/Dashboard.js"],"sourcesContent":["import { state, useState }  from \"react\";\nimport ProjectList from \"./ProjectList\";\nimport NavBar from \"./NavBar\";\n\nexport default function Dashboard ({ user, onLogin }) {\n    const [username, setUsername] = useState(user.username);\n    const [email, setEmail] = useState(user.email);\n    const [password, setPassword] = useState(\"\");\n    const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n    const [imageUrl, setImageUrl] = useState(\"\");\n    const [bio, setBio] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n\n    function handleEdit(e) {\n        e.preventDefault();\n        setErrors([]);\n        setIsLoading(true);\n        fetch(\"/signup\", {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            username: username,\n            email: email,\n            password: password,\n            password_confirmation: passwordConfirmation,\n            img_url: imageUrl,\n            bio: bio,\n          }),\n        }).then((r) => {\n          setIsLoading(false);\n          if (r.ok) {\n            r.json().then((user) => onLogin(user));\n          } else {\n            r.json().then((err) => setErrors(err.errors));\n          }\n        });\n        setUsername(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n        setPasswordConfirmation(\"\");\n        setImageUrl(\"\");\n        setBio(\"\");\n      }\n    \n\n    return (\n        <>\n            <p>Dashboard lives here</p>\n            {/* <NavBar user={user} onLogin={onLogin} /> */}\n            <ProjectList user={user} />\n            <h1>Edit Your Profile</h1>\n        <form onSubmit={handleEdit}>\n          <input\n            type=\"text\"\n            id=\"username\"\n            autoComplete=\"off\"\n            value={username}\n            placeholder=\"Username\"\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <br />\n          <input\n            type=\"text\"\n            id=\"email\"\n            autoComplete=\"off\"\n            value={email}\n            placeholder=\"E-mail Address\"\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <br />\n          <input\n            type=\"text\"\n            id=\"imageUrl\"\n            value={imageUrl}\n            placeholder=\"Profile Image URL\"\n            onChange={(e) => setImageUrl(e.target.value)}\n          />\n          <br />\n          <input\n            rows=\"3\"\n            id=\"bio\"\n            value={bio}\n            placeholder=\"Enter your Bio\"\n            onChange={(e) => setBio(e.target.value)}\n          />\n          <br />\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            placeholder=\"Password\"\n            onChange={(e) => setPassword(e.target.value)}\n            autoComplete=\"current-password\"\n          />\n          <br />\n          <input\n            type=\"password\"\n            id=\"password_confirmation\"\n            value={passwordConfirmation}\n            placeholder=\"Confirm Password\"\n            onChange={(e) => setPasswordConfirmation(e.target.value)}\n            autoComplete=\"current-password\"\n          />\n          <br />\n          <br />\n          <button type=\"submit\">{isLoading ? \"Loading...\" : \"Confirm Changes\"}</button>\n          {errors.map((err) => (\n            <p key={err}>{err}</p>\n          ))}\n        </form>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}