{"ast":null,"code":"var _jsxFileName = \"/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/Dashboard.js\";\nimport { state, useState } from \"react\";\nimport ProjectList from \"./ProjectList\";\nimport NavBar from \"./NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dashboard(_ref) {\n  let {\n    user,\n    onLogin\n  } = _ref;\n  // const [username, setUsername] = useState(user.username);\n  // const [email, setEmail] = useState(user.email);\n  // const [password, setPassword] = useState(\"\");\n  // const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  // const [imageUrl, setImageUrl] = useState(\"\");\n  // const [bio, setBio] = useState(\"\");\n  // const [errors, setErrors] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n\n  // function handleEdit(e) {\n  //     e.preventDefault();\n  //     setErrors([]);\n  //     setIsLoading(true);\n  //     fetch(\"/signup\", {\n  //       method: \"POST\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify({\n  //         username: username,\n  //         email: email,\n  //         password: password,\n  //         password_confirmation: passwordConfirmation,\n  //         img_url: imageUrl,\n  //         bio: bio,\n  //       }),\n  //     }).then((r) => {\n  //       setIsLoading(false);\n  //       if (r.ok) {\n  //         r.json().then((user) => onLogin(user));\n  //       } else {\n  //         r.json().then((err) => setErrors(err.errors));\n  //       }\n  //     });\n  //     setUsername(\"\");\n  //     setEmail(\"\");\n  //     setPassword(\"\");\n  //     setPasswordConfirmation(\"\");\n  //     setImageUrl(\"\");\n  //     setBio(\"\");\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Dashboard lives here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectList, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["state","useState","ProjectList","NavBar","Dashboard","user","onLogin"],"sources":["/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/Dashboard.js"],"sourcesContent":["import { state, useState } from \"react\";\nimport ProjectList from \"./ProjectList\";\nimport NavBar from \"./NavBar\";\n\nexport default function Dashboard({ user, onLogin }) {\n  // const [username, setUsername] = useState(user.username);\n  // const [email, setEmail] = useState(user.email);\n  // const [password, setPassword] = useState(\"\");\n  // const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  // const [imageUrl, setImageUrl] = useState(\"\");\n  // const [bio, setBio] = useState(\"\");\n  // const [errors, setErrors] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n\n  // function handleEdit(e) {\n  //     e.preventDefault();\n  //     setErrors([]);\n  //     setIsLoading(true);\n  //     fetch(\"/signup\", {\n  //       method: \"POST\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify({\n  //         username: username,\n  //         email: email,\n  //         password: password,\n  //         password_confirmation: passwordConfirmation,\n  //         img_url: imageUrl,\n  //         bio: bio,\n  //       }),\n  //     }).then((r) => {\n  //       setIsLoading(false);\n  //       if (r.ok) {\n  //         r.json().then((user) => onLogin(user));\n  //       } else {\n  //         r.json().then((err) => setErrors(err.errors));\n  //       }\n  //     });\n  //     setUsername(\"\");\n  //     setEmail(\"\");\n  //     setPassword(\"\");\n  //     setPasswordConfirmation(\"\");\n  //     setImageUrl(\"\");\n  //     setBio(\"\");\n  //   }\n\n  return (\n    <>\n      <p>Dashboard lives here</p>\n      {/* <NavBar user={user} onLogin={onLogin} /> */}\n      <ProjectList user={user} />\n      {/* <h1>Edit Your Profile</h1>\n        <form onSubmit={handleEdit}>\n          <input\n            type=\"text\"\n            id=\"username\"\n            autoComplete=\"off\"\n            value={username}\n            placeholder=\"Username\"\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <br />\n          <input\n            type=\"text\"\n            id=\"email\"\n            autoComplete=\"off\"\n            value={email}\n            placeholder=\"E-mail Address\"\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <br />\n          <input\n            type=\"text\"\n            id=\"imageUrl\"\n            value={imageUrl}\n            placeholder=\"Profile Image URL\"\n            onChange={(e) => setImageUrl(e.target.value)}\n          />\n          <br />\n          <input\n            rows=\"3\"\n            id=\"bio\"\n            value={bio}\n            placeholder=\"Enter your Bio\"\n            onChange={(e) => setBio(e.target.value)}\n          />\n          <br />\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            placeholder=\"Password\"\n            onChange={(e) => setPassword(e.target.value)}\n            autoComplete=\"current-password\"\n          />\n          <br />\n          <input\n            type=\"password\"\n            id=\"password_confirmation\"\n            value={passwordConfirmation}\n            placeholder=\"Confirm Password\"\n            onChange={(e) => setPasswordConfirmation(e.target.value)}\n            autoComplete=\"current-password\"\n          />\n          <br />\n          <br />\n          <button type=\"submit\">{isLoading ? \"Loading...\" : \"Confirm Changes\"}</button>\n          {errors.map((err) => (\n            <p key={err}>{err}</p>\n          ))}\n        </form> */}\n    </>\n  );\n}\n"],"mappings":";AAAA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,MAAM,MAAM,UAAU;AAAC;AAAA;AAE9B,eAAe,SAASC,SAAS,OAAoB;EAAA,IAAnB;IAAEC,IAAI;IAAEC;EAAQ,CAAC;EACjD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA2B,eAE3B,QAAC,WAAW;MAAC,IAAI,EAAED;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBA6D1B;AAEP;AAAC,KA9GuBD,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module"}