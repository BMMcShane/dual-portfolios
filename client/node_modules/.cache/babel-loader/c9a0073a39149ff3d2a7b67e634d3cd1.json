{"ast":null,"code":"var _jsxFileName = \"/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/ProjectList.js\",\n  _s = $RefreshSig$();\nimport ProjectCard from \"./ProjectCard\";\nimport { v4 as uuid } from \"uuid\";\nimport { state, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProjectList(_ref) {\n  _s();\n  let {\n    user,\n    setUser\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [timeframe, setTimeframe] = useState(\"\");\n  const [route, setRoute] = useState(\"\");\n  const [languages, setLanguages] = useState(\"\");\n  const [awards, setAwards] = useState(\"\");\n  console.log(user.projects);\n  const projects = user.projects.map(p => {\n    return /*#__PURE__*/_jsxDEV(ProjectCard, {\n      project: p\n    }, uuid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this);\n  });\n  function handleAddProject(e) {\n    e.preventDefault();\n    const newProject = {\n      title: title,\n      description: description,\n      timeframe: timeframe,\n      route: route,\n      languages: languages,\n      awards: awards,\n      user_id: user.id\n    };\n    fetch(\"/projects\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newProject)\n    }).then(resp => resp.json()).then(data => setUser(data));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), projects, /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddProject,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Project Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Project Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: timeframe,\n        onChange: e => setTimeframe(e.target.value),\n        placeholder: \"Project Timeframe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: route,\n        onChange: e => setRoute(e.target.value),\n        placeholder: \"Project Route\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Seperate Awards & Languages using \\\", \\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: languages,\n        onChange: e => setLanguages(e.target.value),\n        placeholder: \"Project Languages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: awards,\n        onChange: e => setAwards(e.target.value),\n        placeholder: \"Project Awards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(ProjectList, \"ER2mHjoUP+Z0ERIyjNhqJgBdXBc=\");\n_c = ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["ProjectCard","v4","uuid","state","useState","ProjectList","user","setUser","title","setTitle","description","setDescription","timeframe","setTimeframe","route","setRoute","languages","setLanguages","awards","setAwards","console","log","projects","map","p","handleAddProject","e","preventDefault","newProject","user_id","id","fetch","method","headers","body","JSON","stringify","then","resp","json","data","target","value"],"sources":["/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/ProjectList.js"],"sourcesContent":["import ProjectCard from \"./ProjectCard\";\nimport { v4 as uuid } from \"uuid\";\nimport { state, useState }  from \"react\";\n\nexport default function ProjectList ({ user, setUser }) {\n    const [ title, setTitle ] = useState(\"\");\n    const [ description, setDescription ] = useState(\"\");\n    const [ timeframe, setTimeframe ] = useState(\"\");\n    const [ route, setRoute ] = useState(\"\");\n    const [ languages, setLanguages ] = useState(\"\");\n    const [ awards, setAwards ] = useState(\"\");\n\n    console.log(user.projects)\n\n    const projects = user.projects.map((p) => {\n        return (\n        <ProjectCard key={uuid()} project={p} />\n        )\n    })\n\n    function handleAddProject(e) {\n        e.preventDefault();\n        const newProject = {\n            title: title,\n            description: description,\n            timeframe: timeframe,\n            route: route,\n            languages: languages,\n            awards: awards,\n            user_id: user.id,\n        };\n        fetch(\"/projects\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(newProject),\n        })\n        .then((resp) => resp.json())\n        .then((data) => setUser(data))\n    }\n\n    return (\n        <>\n        <h1>Your Projects</h1>\n        {projects}\n\n        <h1>Add Projects</h1>\n        <form onSubmit={handleAddProject}>\n            <input\n            type=\"text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            placeholder=\"Project Title\"\n            />\n            <br />\n            <input\n            type=\"text\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            placeholder=\"Project Description\"\n            />\n            <br />\n            <input\n            type=\"text\"\n            value={timeframe}\n            onChange={(e) => setTimeframe(e.target.value)}\n            placeholder=\"Project Timeframe\"\n            />\n            <br />\n            <input\n            type=\"text\"\n            value={route}\n            onChange={(e) => setRoute(e.target.value)}\n            placeholder=\"Project Route\"\n            />\n            <br />\n            <p>Seperate Awards & Languages using \", \"</p>\n            <input\n            type=\"text\"\n            value={languages}\n            onChange={(e) => setLanguages(e.target.value)}\n            placeholder=\"Project Languages\"\n            />\n            <br />\n            <input\n            type=\"text\"\n            value={awards}\n            onChange={(e) => setAwards(e.target.value)}\n            placeholder=\"Project Awards\"\n            />\n            <br />\n            <br />\n            <button type=\"submit\">Add Project</button>\n        </form>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}