[{"/Users/thelightdisk/Development/code/dual-portfolios/client/src/index.js":"1","/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/App.js":"2","/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/About.js":"3","/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/Ben.js":"4","/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/Elliot.js":"5","/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/NavBar.js":"6","/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/LoginSignUp.js":"7","/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/Dashboard.js":"8","/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/ProjectList.js":"9","/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/ProjectCard.js":"10","/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/Elliot/SplashScreen.js":"11","/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/Elliot/ElliotProject.js":"12"},{"size":358,"mtime":1666729931807,"results":"13","hashOfConfig":"14"},{"size":1341,"mtime":1666844624034,"results":"15","hashOfConfig":"14"},{"size":2201,"mtime":1666732432340,"results":"16","hashOfConfig":"14"},{"size":215,"mtime":1666729931805,"results":"17","hashOfConfig":"14"},{"size":1261,"mtime":1666886844131,"results":"18","hashOfConfig":"14"},{"size":1875,"mtime":1666734008782,"results":"19","hashOfConfig":"14"},{"size":5194,"mtime":1666840231926,"results":"20","hashOfConfig":"14"},{"size":669,"mtime":1666729931805,"results":"21","hashOfConfig":"14"},{"size":3339,"mtime":1666845391005,"results":"22","hashOfConfig":"14"},{"size":3262,"mtime":1666729931806,"results":"23","hashOfConfig":"14"},{"size":190,"mtime":1666804132716,"results":"24","hashOfConfig":"14"},{"size":219,"mtime":1666844808336,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mkx932",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/thelightdisk/Development/code/dual-portfolios/client/src/index.js",[],[],"/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/App.js",[],[],"/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/About.js",["64","65","66","67"],[],"/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/Ben.js",["68"],[],"/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/Elliot.js",[],[],"/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/NavBar.js",["69","70"],[],"/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/LoginSignUp.js",["71"],[],"/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/Dashboard.js",["72"],[],"/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/ProjectList.js",["73"],[],"import ProjectCard from \"./ProjectCard\";\nimport { v4 as uuid } from \"uuid\";\nimport { useState }  from \"react\";\n\nexport default function ProjectList ({ user, setUser }) {\n    const [ title, setTitle ] = useState(\"\");\n    const [ description, setDescription ] = useState(\"\");\n    const [ timeframe, setTimeframe ] = useState(\"\");\n    const [ route, setRoute ] = useState(\"\");\n    const [ languages, setLanguages ] = useState(\"\");\n    const [ awards, setAwards ] = useState(\"\");\n    const [ isAdding, setIsAdding ] = useState(false);\n\n    const projects = user.projects.map((p) => {\n        return (\n            <ProjectCard user={user} setUser={setUser} key={uuid()} project={p} />\n        )\n    })\n\n    \n\n    function handleAddProject(e) {\n        e.preventDefault();\n        const newProject = {\n            title: title,\n            description: description,\n            timeframe: timeframe,\n            route: route,\n            languages: languages,\n            awards: awards,\n            user_id: user.id,\n        };\n        fetch(\"/projects\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(newProject),\n        })\n        .then((resp) => resp.json())\n        .then((data) => {\n            setUser(data)\n            setTitle(\"\");\n            setDescription(\"\");\n            setTimeframe(\"\");\n            setRoute(\"\");\n            setLanguages(\"\");\n            setAwards(\"\");\n            setIsAdding(false);\n        })\n    }\n\n    return (\n        <>\n        <h1>{user.username}'s projects</h1>\n        { user.projects.length == 0 ?\n        <h2>No Projects For This User</h2>\n        : null }\n\n        {projects}\n\n        <h1>Add Projects</h1>\n        { !isAdding ?\n        <button onClick={() => setIsAdding(true)}>New</button>\n        : null }\n\n\n        { isAdding ?\n        <form onSubmit={handleAddProject}>\n            <input\n            type=\"text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            placeholder=\"Project Title\"\n            />\n            <br />\n            <input\n            type=\"text\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            placeholder=\"Project Description\"\n            />\n            <br />\n            <input\n            type=\"text\"\n            value={timeframe}\n            onChange={(e) => setTimeframe(e.target.value)}\n            placeholder=\"Project Timeframe\"\n            />\n            <br />\n            <input\n            type=\"text\"\n            value={route}\n            onChange={(e) => setRoute(e.target.value)}\n            placeholder=\"Project Route\"\n            />\n            <br />\n            <p>Seperate Awards & Languages using \", \"</p>\n            <input\n            type=\"text\"\n            value={languages}\n            onChange={(e) => setLanguages(e.target.value)}\n            placeholder=\"Project Languages\"\n            />\n            <br />\n            <input\n            type=\"text\"\n            value={awards}\n            onChange={(e) => setAwards(e.target.value)}\n            placeholder=\"Project Awards\"\n            />\n            <br />\n            <br />\n            <button type=\"submit\">Add Project</button>\n        </form>\n        : null }\n        </>\n    )\n}",[],"/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/ProjectCard.js",["74"],[],"/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/Elliot/SplashScreen.js",[],[],"/Users/thelightdisk/Development/code/dual-portfolios/client/src/Components/Elliot/ElliotProject.js",[],[],{"ruleId":"75","severity":1,"message":"76","line":4,"column":1,"nodeType":"77","endLine":35,"endColumn":2},{"ruleId":"78","severity":1,"message":"79","line":10,"column":9,"nodeType":"80","endLine":10,"endColumn":43},{"ruleId":"78","severity":1,"message":"79","line":18,"column":9,"nodeType":"80","endLine":18,"endColumn":43},{"ruleId":"78","severity":1,"message":"79","line":22,"column":9,"nodeType":"80","endLine":22,"endColumn":46},{"ruleId":"75","severity":1,"message":"76","line":3,"column":1,"nodeType":"77","endLine":12,"endColumn":2},{"ruleId":"81","severity":1,"message":"82","line":1,"column":10,"nodeType":"83","messageId":"84","endLine":1,"endColumn":18},{"ruleId":"81","severity":1,"message":"85","line":1,"column":29,"nodeType":"83","messageId":"84","endLine":1,"endColumn":33},{"ruleId":"81","severity":1,"message":"86","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},{"ruleId":"87","severity":1,"message":"88","line":15,"column":6,"nodeType":"89","endLine":15,"endColumn":8,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":56,"column":32,"nodeType":"93","messageId":"94","endLine":56,"endColumn":34},{"ruleId":"81","severity":1,"message":"86","line":1,"column":20,"nodeType":"83","messageId":"84","endLine":1,"endColumn":29},"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'redirect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array. If 'setUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["95"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"96","fix":"97"},"Update the dependencies array to be: [setUser]",{"range":"98","text":"99"},[408,410],"[setUser]"]